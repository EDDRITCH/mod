on_actions = {
	# country
	#on_new_term_election = {
	#	random_events = {
	#	}
	#
	#}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}

	# country, FROM = our ace,
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace,
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {

	}

	on_wargoal_expire = {

	}

	#FROM is state #ROOT is broken as hell
	on_nuke_drop = {

		effect = {
			news_event = { id = nuke_dropped.2 days = 1}
			news_event = { id = nuke_dropped.3 days = 1}
			news_event = { id = nuke_dropped.4 days = 1}
			news_event = { id = nuke_dropped.5 days = 1}
			news_event = { id = nuke_dropped.6 days = 1}
			news_event = { id = nuke_dropped.7 days = 1}
			news_event = { id = nuke_dropped.8 days = 1}
			news_event = { id = nuke_dropped.9 days = 1}
			news_event = { id = nuke_dropped.10 days = 1}
			news_event = { id = nuke_dropped.11 days = 1}
			news_event = { id = nuke_dropped.12 days = 1}
			news_event = { id = nuke_dropped.13 days = 1}
			news_event = { id = nuke_dropped.14 days = 1}
			news_event = { id = nuke_dropped.15 days = 1}
		}
		random_events = {
			100 = nuke_dropped.0
		}
	}

	# country random events
	#on_bi_yearly_pulse = {
	#	random_events = {
	#		# 5 = war_creation.1
	#	}
	#}

	#on_five_year_pulse = {
	#
	#}

	#on_border_war_lost = {
	#
	#}

	on_leave_faction = {
		effect = {
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}

				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
		}
	}

	#PREV is the one that joins the faction
	#on_create_faction = {
	#	effect = {
	#	}
	#
	#}

	#PREV is country getting invited.
	#on_offer_join_faction = {
	#	effect = {
	#	}
	#
	#}

	#PREV is faction leader on join faction requests.
	#on_join_faction = {
	#	effect = {
	#	}
	#
	#}

	# FROM is war target
	on_declare_war = {
		effect = {
				if = {
					limit = {
						PREV = { original_tag = HAN }
						original_tag = CES
					}
					PREV = { country_event = { days = 1 id = hangdogs.1 } }
				}
				if = {
					limit = {
						has_annex_war_goal = PREV
					}
				ROOT = {
						every_state = {
							limit = {
								is_owned_by = PREV
							}
							add_claim_by = PREV
						}
					}
				}
		}
	}

	# When a new faction is formed
	#on_faction_formed = {
	#
	#}
	
	# ROOT is winner, FROM is loser
	on_peaceconference_ended = {
		effect = {
			if = {
				limit = {
					AND = {
						ROOT = {
							tag = BAR
						}
						FROM = {
							tag = NCR
						}
					}
				}
							
				every_state = {
					limit = {
						AND = {
							is_core_of = NCR
							is_baron_state = no
						}
					}				
					remove_core_of = BAR
					NCR = {
						transfer_state = PREV
					}
				}
			}
			
			if = {
				limit = {
					AND = {
						ROOT = {
							tag = BON
						}
						FROM = {
							tag = NCR
						}
					}
				}
							
				every_state = {
					limit = {
						AND = {
							is_core_of = NCR
							NOT = {
								state = 350
								state = 591
								state = 292
								state = 19
								state = 180
								state = 396
							}
						}
					}				
					remove_core_of = BON
					NCR = {
						transfer_state = PREV
					}
				}
			}
			
			if = {
				limit = {
					AND = {
						ROOT = {
							tag = ENC
						}
						FROM = {
							tag = NCR
						}
					}
				}

				if = {
					limit = {
						NEW = {
							has_cosmetic_tag = ENC
						}
					}
					if = {
						limit = {
							AND = {
								NEW = {
									is_ai = no
								}
								ENC = {
									is_ai = yes
								}
							}
						}
						ENC = {
							every_unit_leader = {
								set_nationality = NEW
							}
						}
						every_state = {
							limit = {
								is_core_of = ENC
							}
							add_core_of = NEW
						}
						if = {
							limit = {
								BJS = { exists = yes is_puppet_of = ENC }
							}
							ENC = { release_puppet = BJS }
							NEW = { puppet = BJS }
						}
						NEW = {
							annex_country = { target = ENC transfer_troops = yes }
						}
					}
				}
			}
		}
	}

	# ROOT is capitulated country, FROM is winner
	#on_capitulation = {
	#	effect = {
	#		news_event = { id = country_capitulated.0 days = 0 }
    #        # Legion lost
    #        if = {
    #            limit = {
    #                tag = CES
    #                has_war_with = NCR
    #                has_country_flag = battle_for_hoover_dam
    #            }
    #            country_event = { id = nf_legion.4 }
    #        }
    #        if = {
    #            limit = {
    #                tag = NCR
    #                has_war_with = CES
    #                FROM = { 
    #                    tag = CES
    #                    has_country_flag = battle_for_hoover_dam 
    #                }
    #            }
    #            country_event = { id = nf_legion.3 }
    #        }
	#		every_state = {
	#			limit = {
	#				is_core_of = ROOT
	#			}
	#			decimate_half_all_industry = yes
	#		}
	#	}
	#	
	#}

	#on_government_change = {
	#
	#}

	#on_coup_succeeded = {
	#
	#}

	#ROOT is winner #FROM gets annexed
	#on_civil_war_end = {
	#
	#}

	#used when puppeting in a peace conference
	#ROOT = nation being puppeted, FROM = overlord
	on_puppet = {
		effect = {
			every_country = { country_event = startup.4 }
		}
	}
	
	#used when puppeting through the occupied territories menu during peace time (or when releasing from non-core but owned territory, f.e. Britain releasing Egypt)
	#ROOT = nation being released, FROM = overlord
	on_release_as_puppet = {
		effect = {
			every_country = { country_event = startup.4 }
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired

	#Not run on a specific country.
	on_startup = {
		effect = {
			## Relation modifiers for countries based on types
			# nobody likes supermutants, supermutants don't like anyone else
			every_country = {
					limit = {
						is_super_mutant = yes
					}
					every_country = {
						limit = {
							NOT = { is_super_mutant = yes }
						}
						reverse_add_opinion_modifier = {
							target = PREV
							modifier = non_supermutants
						}
						add_opinion_modifier = {
							target = PREV
							modifier = supermutants
						}
					}
			}
			# everyone views HEA as religious nutjobs, HEA views everyone as impure
			every_country = {
				limit = {
					tag = HEA
				}
				every_country = {
					limit = {
						NOT = { tag = HEA }
					}
					reverse_add_opinion_modifier = {
						target = PREV
						modifier = hea_view_world
					}
					add_opinion_modifier = {
						target = PREV
						modifier = world_view_hea
					}
				}
			}
			# everyone fears BRK, BRK sees everyone as future prey
			every_country = {
				limit = {
					tag = BRK
				}
				every_country = {
					limit = {
						NOT = { tag = BRK }
					}
					reverse_add_opinion_modifier = {
						target = PREV
						modifier = brk_view_world
					}
					add_opinion_modifier = {
						target = PREV
						modifier = world_view_brk
					}
				}
			}
			# settlers/raiders dislike each other innately
			every_country = {
					limit = {
						is_raider_nation = yes
					}
					every_country = {
						limit = {
							is_settler_nation = yes
						}
						add_opinion_modifier = {
							target = PREV
							modifier = settlers_vs_raiders
						}
						reverse_add_opinion_modifier = {
							target = PREV
							modifier = settlers_vs_raiders
						}
					}
			}
			
			## setting initial technologies, these can be found in scripted effects/set_technology_effects: 
			## Scripted by Mechano
			#initial tribal technology
			every_country = {
				limit = {
					is_tribal_nation = yes
				}
				add_ideas = tribal_nation
				set_technology_tribal = yes
			}
			#initial raider technology
			every_country = {
				limit = {
					is_raider_nation = yes
				}
				add_ideas = raider_nation
				set_technology_raider = yes
			}
			#initial settler technology
			every_country = {
				limit = {
					is_settler_nation = yes
				}
				add_ideas = settler_nation
				set_technology_settler = yes
			}
			#initial generic brotherhood technology
			every_country = {
				limit = {
					is_brotherhood_nation = yes
				}
				set_technology_brotherhood = yes
			}
			## Setting state flags to be impassable
			## Delicately copy-pasted line to line by HappyNTH
			10 = { set_state_flag = is_impassable }
			58 = { set_state_flag = is_impassable }
			67 = { set_state_flag = is_impassable }
			76 = { set_state_flag = is_impassable }
			80 = { set_state_flag = is_impassable }
			98 = { set_state_flag = is_impassable }
			167 = { set_state_flag = is_impassable }
			259 = { set_state_flag = is_impassable }
			271 = { set_state_flag = is_impassable }
			348 = { set_state_flag = is_impassable }
			355 = { set_state_flag = is_impassable }
			394 = { set_state_flag = is_impassable }
			415 = { set_state_flag = is_impassable }
			459 = { set_state_flag = is_impassable }
			495 = { set_state_flag = is_impassable }
			513 = { set_state_flag = is_impassable }
			526 = { set_state_flag = is_impassable }
			531 = { set_state_flag = is_impassable }
			549 = { set_state_flag = is_impassable }
			615 = { set_state_flag = is_impassable }
			616 = { set_state_flag = is_impassable }
			618 = { set_state_flag = is_impassable }
			619 = { set_state_flag = is_impassable }
			620 = { set_state_flag = is_impassable }
			621 = { set_state_flag = is_impassable }
			622 = { set_state_flag = is_impassable }
			623 = { set_state_flag = is_impassable }
			624 = { set_state_flag = is_impassable }
			625 = { set_state_flag = is_impassable }
			626 = { set_state_flag = is_impassable }
			627 = { set_state_flag = is_impassable }
			628 = { set_state_flag = is_impassable }
			629 = { set_state_flag = is_impassable }
			631 = { set_state_flag = is_impassable }
			632 = { set_state_flag = is_impassable }
			633 = { set_state_flag = is_impassable }
			634 = { set_state_flag = is_impassable }
			635 = { set_state_flag = is_impassable }
			637 = { set_state_flag = is_impassable }
			639 = { set_state_flag = is_impassable }
			640 = { set_state_flag = is_impassable }
			642 = { set_state_flag = is_impassable }
			643 = { set_state_flag = is_impassable }
			644 = { set_state_flag = is_impassable }
			645 = { set_state_flag = is_impassable }
			646 = { set_state_flag = is_impassable }
			647 = { set_state_flag = is_impassable }
			648 = { set_state_flag = is_impassable }
			649 = { set_state_flag = is_impassable }
			650 = { set_state_flag = is_impassable }
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	# Captured states have a reduction to all industry by 50% unless recaptured
	# scripted by Mechano
	on_state_control_changed = {
		effect = {
			FROM.FROM = {
				if {
					limit = {
						NOT = {
							AND = {
								is_owned_by = PREV
								PREV = { ROOT = { has_war_with = FROM } }
							}
						}
						NOT = { has_state_flag = do_not_decimate }
					}
					decimate_half_all_industry = yes
				}
				if {
					limit = {
						AND = {
							is_owned_by = PREV
							PREV = { ROOT = { has_war_with = FROM } }
						}
						NOT = { has_state_flag = do_not_decimate }
					}
					undecimate_half_all_industry = yes
				}
			}
		}
	}
}
